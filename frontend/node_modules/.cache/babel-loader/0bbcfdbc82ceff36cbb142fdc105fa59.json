{"ast":null,"code":"var _jsxFileName = \"/Users/manpreetkaur/Desktop/DX Factor Work Work/Project/frontend/src/Admin/Product.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@mui/styles';\nimport { Grid, TextField, Button, Avatar } from '@mui/material';\nimport { Save, ClearAll, List } from '@mui/icons-material';\nimport Swal from 'sweetalert2';\nimport { postDataAndImage } from '../FetchNodeServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItem: 'center',\n    paddingTop: 100\n  },\n  subdiv: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItem: 'center',\n    width: 800,\n    marginTop: 20,\n    padding: 20,\n    background: '#ecf0f1',\n    borderRadius: 5\n  },\n  inputstyle: {\n    display: 'none'\n  },\n  center: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nexport default function Category() {\n  _s();\n\n  const classes = useStyles();\n  const [categoryId, set] = useState(\"\");\n  const [image, setImage] = useState({\n    bytes: \"\"\n  });\n\n  const addCategory = async () => {\n    var formData = new FormData();\n    formData.append('categoryName', categoryName);\n    formData.append('image', image.bytes);\n    var result = await postDataAndImage('insertCategory', formData);\n\n    if (result) {\n      Swal.fire({\n        text: 'Category Added Succesfully',\n        imageUrl: \"/logo.jpg\",\n        imageAlt: 'Custom image',\n        icon: 'success'\n      });\n    } else {\n      Swal.fire({\n        text: 'Fail to add category',\n        imageUrl: '/logo.jpg',\n        imageAlt: 'Custom image',\n        icon: 'error'\n      });\n    }\n  };\n\n  const handleImage = event => {\n    console.log(event.target.files[0]);\n    setImage({\n      filename: URL.createObjectURL(event.target.files[0]),\n      bytes: event.target.files[0]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.subdiv,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'row'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 18,\n                    letterSpacing: 1,\n                    fontWeight: 800\n                  },\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            variant: \"outlined\",\n            onChange: event => setcategoryName(event.target.value),\n            label: \"Enter Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contained-button-file\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: event => handleImage(event),\n              className: classes.inputstyle,\n              accept: \"image/*\",\n              id: \"contained-button-file\",\n              multiple: true,\n              type: \"file\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              fullWidth: true,\n              variant: \"contained\",\n              component: \"span\",\n              children: \"Upload Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          className: classes.center,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            alt: \"Image\",\n            variant: \"rounded\",\n            src: image.filename\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            fullWidth: true,\n            onClick: addCategory,\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 87\n            }, this),\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Category, \"/IonyXWElWqDqRiRsoi9cY9URJ4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","useState","makeStyles","Grid","TextField","Button","Avatar","Save","ClearAll","List","Swal","postDataAndImage","useStyles","root","display","justifyContent","alignItem","paddingTop","subdiv","width","marginTop","padding","background","borderRadius","inputstyle","center","alignItems","Category","classes","categoryId","set","image","setImage","bytes","addCategory","formData","FormData","append","categoryName","result","fire","text","imageUrl","imageAlt","icon","handleImage","event","console","log","target","files","filename","URL","createObjectURL","flexDirection","fontSize","letterSpacing","fontWeight","setcategoryName","value"],"sources":["/Users/manpreetkaur/Desktop/DX Factor Work Work/Project/frontend/src/Admin/Product.js"],"sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@mui/styles';\nimport {Grid,TextField,Button,Avatar} from '@mui/material'\nimport {Save,ClearAll,List} from '@mui/icons-material';\nimport Swal from 'sweetalert2'\nimport { postDataAndImage } from '../FetchNodeServices';\n\n\n\n\nconst useStyles = makeStyles({\n    root:{\n       display:'flex',\n       justifyContent:'center',\n       alignItem:'center',\n       paddingTop:100\n\n    },\n    subdiv:{\n\n        display:'flex',\n        justifyContent:'center',\n        alignItem:'center',\n        width:800,\n        marginTop:20,\n        padding:20,\n        background:'#ecf0f1',\n        borderRadius:5\n  },\n    inputstyle:{\n        display:'none'\n    },\n    center:{\n        display:'flex',\n        justifyContent:'center',\n        alignItems:'center',\n    }\n  });\nexport default function Category() {\n    const classes = useStyles();\n\n    const [categoryId, set] = useState(\"\");\n    const [image,setImage]=useState({bytes:\"\"})\n\n    const addCategory = async()=>{\n      var formData = new FormData()\n      formData.append('categoryName',categoryName)\n      formData.append('image',image.bytes)\n      var result=await postDataAndImage('insertCategory',formData) \n\n      if(result)\n      {\n      Swal.fire({\n      \n       text: 'Category Added Succesfully',\n       imageUrl: \"/logo.jpg\",\n       \n       imageAlt: 'Custom image',\n       icon:'success'\n     })\n      }\n      else\n      {\n       Swal.fire({\n          \n           text: 'Fail to add category',\n           imageUrl: '/logo.jpg',\n            \n           imageAlt: 'Custom image',\n           icon:'error'\n         })  \n      }\n\n    }\n\n\n    const handleImage=(event)=>{\n      console.log(event.target.files[0]);\n      setImage({filename:URL.createObjectURL(event.target.files[0]),bytes:event.target.files[0]})\n  }\n\n\n  return (\n   <div className={classes.root} >\n        <div className={classes.subdiv}>\n            <Grid container spacing={2}>\n            <Grid item xs={12} >\n               \n               <Grid container spacing={1}> \n               <Grid item xs={6}>\n                <div style={{display:'flex',flexDirection:'row'}}>\n                    <div style={{fontSize:18,letterSpacing:1,fontWeight:800}}>\n                        Category  \n                    </div>\n                  </div>\n                  </Grid>\n                  {/* <Grid item xs={6} className={classes.center}>\n                    <div>\n                     <Button  startIcon={<List />} variant=\"contained\">Category List</Button>   \n                     </div>   \n                   </Grid> */}\n                </Grid>\n\n\n                </Grid>\n\n                <Grid item xs={12}>\n                 <TextField  fullWidth variant=\"outlined\" onChange={(event)=> setcategoryName(event.target.value)} label=\"Enter Category\"/>    \n                </Grid>\n                \n                <Grid item xs={6}>\n                <label htmlFor=\"contained-button-file\">\n        <input onChange={(event)=>handleImage(event)} className={classes.inputstyle} accept=\"image/*\" id=\"contained-button-file\" multiple type=\"file\" />\n        <Button   fullWidth variant=\"contained\" component=\"span\">\n          Upload Image\n        </Button>\n      </label>    \n                </Grid>\n            <Grid item xs={6} className={classes.center} >\n\n            <Avatar alt=\"Image\" variant=\"rounded\" src={image.filename}  />\n                </Grid>\n\n\n                <Grid item xs={12}>\n               <Button fullWidth onClick={addCategory} variant=\"contained\" startIcon={<Save />}>Save</Button>\n                    </Grid>\n                    {/* <Grid item xs={6}>\n               <Button fullWidth variant=\"contained\" startIcon={<ClearAll />}>Reset</Button>\n                    </Grid> */}\n\n            </Grid>\n        </div>\n\n     </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}